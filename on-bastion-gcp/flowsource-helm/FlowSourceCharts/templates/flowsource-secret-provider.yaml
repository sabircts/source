{{- if .Values.flowsource.flowsourceSecrets.useSecretProvider }}
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: flowsource-secrets-provider
  namespace: {{ .Values.global.namespace }}
spec:
  provider: {{ .Values.flowsource.flowsourceSecrets.secretproviderDetails.provider }}
  parameters:
  {{- if eq .Values.flowsource.flowsourceSecrets.secretproviderDetails.provider "azure" }}
   # parameter values for Azure
    usePodIdentity: "false"
    useVMManagedIdentity: "true"
    userAssignedIdentityID: {{ .Values.flowsource.flowsourceSecrets.secretproviderDetails.azure.userManagedIdentityClientId }}
    keyvaultName: {{ .Values.flowsource.flowsourceSecrets.secretproviderDetails.azure.keyvaultName }}
    tenantId: {{ .Values.flowsource.flowsourceSecrets.secretproviderDetails.azure.tenantId }}
    objects: |
      array:
      {{- range $secretObject := .Values.flowsource.flowsourceSecrets.secretproviderDetails.secretObjects }}
        - |
          objectName: {{ $secretObject.keyVaultObjectName }}
          objectType: secret
          objectVersion: ""
      {{ end }}
  secretObjects:
    - secretName: flowsource-secrets
      data:
      {{- range $secretObject := .Values.flowsource.flowsourceSecrets.secretproviderDetails.secretObjects }}
      - key: {{ $secretObject.secretName }}
        objectName: {{ $secretObject.keyVaultObjectName }}
      {{- end }}        
      type: Opaque
 
  {{- else if eq .Values.flowsource.flowsourceSecrets.secretproviderDetails.provider "aws" }}
    # parameter values for AWS
    region: {{ .Values.flowsource.flowsourceSecrets.secretproviderDetails.aws.region }}
    objects: |
      - objectName: {{ .Values.flowsource.flowsourceSecrets.secretproviderDetails.aws.secretARN }}
        objectType: secretsmanager
        jmesPath:
        {{- range $secretObject := .Values.flowsource.flowsourceSecrets.secretproviderDetails.secretObjects }}
          - path: {{ $secretObject.keyVaultObjectName }}
            objectAlias: {{ $secretObject.secretName }}
      {{ end }}
  secretObjects:
    - secretName: flowsource-secrets
      data:
      {{- range $secretObject := .Values.flowsource.flowsourceSecrets.secretproviderDetails.secretObjects }}
      - key: {{ $secretObject.secretName }}
        objectName: {{ $secretObject.secretName }}
      {{- end }}        
      type: Opaque
  {{- else if eq .Values.flowsource.flowsourceSecrets.secretproviderDetails.provider "gcp" }}
  {{- $project := .Values.flowsource.flowsourceSecrets.secretproviderDetails.gcp.project }}
    secrets: |
    {{- range $secretObject := .Values.flowsource.flowsourceSecrets.secretproviderDetails.secretObjects }}
      - resourceName: projects/{{ $project }}/secrets/{{ $secretObject.keyVaultObjectName }}/versions/latest
        path: {{ $secretObject.secretName }}
    {{ end }}
  secretObjects:
    - secretName: flowsource-secrets
      data:
      {{- range $secretObject := .Values.flowsource.flowsourceSecrets.secretproviderDetails.secretObjects }}
      - key: {{ $secretObject.secretName }}
        objectName: {{ $secretObject.secretName }}
      {{- end }}        
      type: Opaque
 
  {{- end }}
{{- end }}